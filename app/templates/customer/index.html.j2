{% extends "base.html.j2" %}
{% from "macros.html.j2" import render_pagination %}


{% block content %}

{# Display grid wrapper #}
<div class="wrapper">


{# Page title #}
<div class="search-page-title">
    <div class="container text-center mb-5 mt-5">
        <span class="title"><h1>{% block title %} Search Customers {% endblock %}</h1></span>
    </div> 
</div>


{# New customer button. Activates modal #}
<div class="new-customer-button">
    <button type="button" class="btn btn-primary" data-route="{{ url_for('customer.add_customer')}}" 
        id="newCustomerBtn" data-bs-target="#newCustomerModal">New Customer
    </button>
</div> 


{# Modal for new customer #}
<div class="modal fade" id="newCustomerModal" tabindex="-1" role="dialog" 
    aria-labelledby="modalLabel" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            {# Script loads modal content here #}
        </div>
    </div>
</div>


{# Delete customer modal #}
<div class="modal fade" id="deleteCustomerModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">

      <div class="modal-header">
        <h1 class="modal-title" id="modalLabel">Delete Customer Confirmation</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        Are you sure you would like to delete this customer?
      </div>

      <div class="modal-footer mx-auto">
        <button id="deleteCustomerModalBtn" type="button" class="btn btn-primary">Confirm</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>

    </div>
  </div>
</div>


{# Search bar and button #}
<div class="search-input-field">
    <form action="{{ url_for('customer.search', search_tag='search_tag') }}" method="POST" class="row mb-3" novalidate>
        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}"/>
        <div class="col-sm-4 mb-3">
            <div class="input-group">
                <input type="text" class="form-control" name="search_tag" id="search_tag" placeholder="Search By Name">
            </div>
        </div>

        <div class="col-sm-2 mb-3">
            <button type="submit" class="btn btn-primary" id="searchButton">Search</button>
        </div>

        <div class="col-sm-4 mb-3">
            <a href="{{ url_for('customer.index')}}">
                <button type="button" class="btn btn-primary" id="resetSearchButton">Reset Search</button>
            </a>
        </div>
    </form> 
</div>

{# Customer results table #}
<div class="customer-search-table">
    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr class="text-center">
                <th>ID</th>
                <th>Name</th>
                <th>Street</th>
                <th>City</th>
                <th>State</th>
                <th>Zip</th>
                <th>View</th>
                <th>Delete</th>
            </tr>
        </thead>
     <tbody>
            {% for customer in customers.items %}
                <tr class="text-center align-middle">
                    <td>{{ customer.id }}</td>
                    <td>{{ customer.name }}</td>
                    <td>{{ customer.addresses[0].street }}</td>
                    <td>{{ customer.addresses[0].city }}</td>
                    <td>{{ customer.addresses[0].state }}</td>
                    <td>{{ customer.addresses[0].zip }}</td>

                    <td id="viewBtnTD">
                        <a href="{{ url_for('customer.detail', Id=customer.id)}}">
                            <button type="button" id="viewCustomerBtn" class="btn btn-primary">View</button>
                        </a>
                    </td>

                    <td id="deleteBtnTD">
                        <button type="button" class="btn btn-secondary" 
                            data-deleting="{{ url_for('customer.delete_customer', Id=customer.id)}}" 
                            id="deleteCustomerBtn" data-bs-toggle="modal" 
                            data-bs-target="#deleteCustomerModal">Delete
                        </button>
                    </td>

                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>


{# PAGINATION MACRO #}
<div class="pagination-table">
    <ul class="pagination justify-content-center">
        {# Endpoint passed in from route. Either, 'customer.index' or 'customer.search'. #}
        {{ render_pagination(customers, endpoint )}}
    </ul>
</div>

</div> {# End of display grid wrapper #}


<script>

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Bootstrap JavaScript styling for disabling form submissions if there are invalid fields.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    (validateForm = () => {
    'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to.
        const forms = document.querySelectorAll('.needs-validation');
        let formValid = true;

        // Loop over forms, call validate functions, and prevent submission if needed.
        Array.from(forms).forEach(form => {
            phoneNumberValidate();
            emailValidate();

            if(!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
                formValid = false;
            };
            form.classList.add('was-validated');
        });
        return formValid;
    });


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Load new customer form in a modal
    ////////////////////////////////////////////////////////////////////////////////////////////////////
     $('#newCustomerBtn').on('click', function () {
        // Route specified in button attribute "data-route".
        const url = $(this).data('route');

        $.get(url, function (data) {
            $('#newCustomerModal .modal-content').html(data);
            $('#newCustomerModal').modal('toggle');

            $('#customerFormButton').on('click', function (event) {
                event.preventDefault();
                let isValid = validateForm();

                if(isValid == true) {
                    $.post(url, data = $('#newCustomerModalForm').serialize(), function (data) {
                        if(data.status == '200 OK') {
                            $('#newCustomerModal').modal('hide');
                            location.replace({{request.full_path|tojson}});
                        };
                    });
                };
            });
        });
    });


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Delete customer modal confirmation
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    let rowIndex = $('tr').length;
    let currentBaseUrl = {{ request.base_url|tojson }};
    let currentArgs = {{ request.args|tojson }};
    let currentPage = currentArgs['page'];
    let pageNum = currentPage-1;
    let prevPageUrl = `${currentBaseUrl}?page=${pageNum}&search_tag=`;

    $('#deleteBtnTD button').on('click', function () {
        // Route specified in button attribute "data-deleting".
        const url = $(this).data('deleting');

        $('#deleteCustomerModalBtn').on('click', function (event) {
            $.post(url, function (data) {
                if(data.status == '200 OK') {
                    $('#deleteCustomerModal').modal('hide');
                    if(rowIndex > 2 || currentPage == 1 || currentPage === undefined) {
                        location.replace({{request.full_path|tojson}});
                    } else {
                        location.replace(prevPageUrl);
                    };  
                };
            });
        });
    });


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Keep user input text in search field
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    let thisUrl = {{ request.base_url|tojson }};
    if(!thisUrl.toLowerCase().includes('search')) {
        sessionStorage.removeItem('text');
    };

    let savedInputText = sessionStorage.getItem('text');
    document.getElementById('search_tag').value = savedInputText;

    $('#searchButton').on('click', function () {
        let inputText = document.getElementById('search_tag').value;
        sessionStorage.setItem('text', inputText);
    });

    $('#resetSearchButton').on('click', function () {
        sessionStorage.removeItem('text');
    });

</script>

{% endblock %}
