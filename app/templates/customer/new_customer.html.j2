{% from "macros.html.j2" import render_field %}


    <div class="modal-header">
        <h1 class="modal-title fs-5 w-100 text-center" id="modalTitle">New Customer</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>

    <form action="" method="POST" class="needs-validation" id="ModalForm" novalidate>
        <div class="modal-body">

        {{ form.hidden_tag() }}

        <div class="mb-3">
            {{ render_field(form.name)}}
        </div>

        <div class="mb-3">
            {{ render_field(form.street)}}
        </div>

        <div class="mb-3">
            {{ render_field(form.city)}}
        </div>

        <div class="mb-3">
            {{ render_field(form.state)}}
        </div>

        <div class="mb-3">
            {{ render_field(form.zip)}}
        </div>

        <div class="mb-3">
            {{ render_field(form.phone_number, maxlength="13")}}
        </div>

        <div class="mb-3">
            {{ render_field(form.email)}}
        </div>

        <div class="d-grid gap-2 mb-3">
            {{ form.submit(class="btn btn-primary") }}    
        </div>

        <div class="d-grid gap-2 mb-3">
            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Cancel</button>
        </div> 

        </div>
    </form>


<script>

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Format phone number as user types: (XXX)XXX-XXXX
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    $( "#phone_number" ).on( "keyup change", function( event ) {

        // '/\D/' Matches any character that is not a digit.
        // 'g' global match modifier. Finds all matches not just the first.
        var num = $(this).val().replace(/\D/g,''); 

        // Do nothing if backspace, left and right arrow keys are pressed.
        if(event.which != 8 && event.which != 37 && event.which != 39) {
            $(this).val('(' + num.substring(0,3) + ')' + num.substring(3,6) + '-' + num.substring(6,10));
        }
    });


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Make sure length of phone number is 13 characters.
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    function phoneNumberValidate() {
        const phone_num = document.getElementById('phone_number');
        const isValid = phone_num.value.length === 13;

        if(!isValid) {
            phone_num.setCustomValidity('Invalid');
            phone_num.nextElementSibling.textContent = 'Phone Number is too short.'
        }
        else {
            phone_num.setCustomValidity('');
        }
        return isValid;
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    // Make sure the entered email address is a vaild email format
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    function emailValidate() {
        const email = document.getElementById('email');
        const emailRegExp =
        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;

        const isValid = email.value.length === 0 || emailRegExp.test(email.value);

        if(!isValid) {
            email.setCustomValidity('Invalid');
            email.nextElementSibling.textContent = 'Not a valid email format'
        }
        else {
            email.setCustomValidity('');
        }
        return isValid;
    }

</script>
